import React, { useState } from "react";
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  Image,
  Alert,
  Platform,
  Share,
} from "react-native";
import { Ionicons } from "@expo/vector-icons";
import styles from "../Styles/Go_Bag.styles";
import Logo from "../Images/SafeLink_LOGO.png";

// Conditional import for web-only PDF functionality
let jsPDF, autoTable;
if (Platform.OS === "web") {
  try {
    jsPDF = require("jspdf").jsPDF;
    autoTable = require("jspdf-autotable").default;
  } catch (error) {
    console.warn("PDF libraries not available on this platform");
  }
}

export default function Go_Bag({ navigation }) {
  const items = [
    "Water",
    "Non-perishable food",
    "First aid kit",
    "Flashlight",
    "Extra batteries",
    "Whistle",
    "Facemask",
    "Clothing",
    "Personal hygiene items",
  ];

  const [checkedItems, setCheckedItems] = useState([]);

  const toggleItem = (item) => {
    if (checkedItems.includes(item)) {
      setCheckedItems(checkedItems.filter((i) => i !== item));
    } else {
      setCheckedItems([...checkedItems, item]);
    }
  };

  // üîπ Generate aesthetic PDF (web only)
  const generatePDF = () => {
    if (Platform.OS !== "web" || !jsPDF || !autoTable) {
      return null;
    }

    const doc = new jsPDF();

    // Title
    doc.setFontSize(22);
    doc.setTextColor("#E82222");
    doc.text("Go-Bag Checklist", 105, 15, { align: "center" });

    // Date
    doc.setFontSize(12);
    doc.setTextColor("#333");
    doc.text(`Date: ${new Date().toLocaleDateString()}`, 105, 22, { align: "center" });

    // Table
    const tableData = items.map((item) => [
      checkedItems.includes(item) ? "‚úì" : "",
      item,
    ]);

    autoTable(doc, {
      startY: 30,
      head: [["Status", "Item"]],
      body: tableData,
      theme: "grid",
      headStyles: {
        fillColor: "#E82222",
        textColor: "#fff",
        halign: "center",
      },
      bodyStyles: {
        textColor: "#000",
        fontSize: 12,
      },
      columnStyles: {
        0: { halign: "center", cellWidth: 20 },
        1: { cellWidth: 150 },
      },
    });

    return doc;
  };

  // üîπ Download PDF
  const handleDownload = () => {
    try {
      if (Platform.OS === "web" && jsPDF && autoTable) {
        const doc = generatePDF();
        if (doc) {
          doc.save("GoBag_Checklist.pdf");
        }
      } else {
        // Mobile: Show alert and offer to share instead
        Alert.alert(
          "PDF Generation",
          "PDF generation is optimized for web. Would you like to share your checklist as text instead?",
          [
            { text: "Cancel", style: "cancel" },
            { text: "Share as Text", onPress: handleShare }
          ]
        );
      }
    } catch (err) {
      console.log("Download error:", err);
      Alert.alert("Error", "Failed to generate PDF");
    }
  };

  // üîπ Share PDF cross-platform
  const handleShare = async () => {
    try {
      if (Platform.OS === "web" && jsPDF && autoTable) {
        // Web: Generate PDF and download
        const doc = generatePDF();
        if (doc) {
          doc.save("GoBag_Checklist.pdf");
        }
      } else {
        // Mobile: Share text instead of PDF to avoid encoding issues
        const checklistText = `üéí Go-Bag Checklist\nDate: ${new Date().toLocaleDateString()}\n\n${items
          .map((item, index) => `${checkedItems.includes(item) ? "‚úì" : "‚òê"} ${item}`)
          .join("\n")}\n\nGenerated by SafeLink App`;
        
        await Share.share({
          message: checklistText,
          title: "Go-Bag Checklist"
        });
      }
    } catch (err) {
      console.log("Share error:", err);
      Alert.alert("Error", "Failed to share checklist");
    }
  };

  return (
    <View style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <View style={styles.headerContent}>
          <TouchableOpacity onPress={() => navigation.goBack()}>
            <Ionicons name="arrow-back" size={28} color="white" />
          </TouchableOpacity>

          <View style={styles.logoWrapper}>
            <Image source={Logo} style={styles.logoImage} />
            <Text style={styles.logo}>
              <Text style={{ color: "white" }}>Safe</Text>
              <Text style={{ color: "#E82222" }}>Link</Text>
            </Text>
          </View>

          <View style={{ padding: 6, alignItems: "center", justifyContent: "center" }}>
            <Ionicons name="person-circle" size={32} color="white" />
          </View>
        </View>
      </View>

      {/* Title */}
      <View style={styles.titleRow}>
        <Ionicons name="checkbox" size={24} color="green" />
        <Text style={styles.title}>Go-Bag Checklist</Text>
      </View>

      {/* Checklist */}
      <ScrollView contentContainerStyle={styles.list}>
        {items.map((item, index) => {
          const isChecked = checkedItems.includes(item);
          return (
            <TouchableOpacity
              key={index}
              style={styles.listItem}
              onPress={() => toggleItem(item)}
            >
              <Ionicons
                name={isChecked ? "checkbox" : "square-outline"}
                size={24}
                color={isChecked ? "green" : "gray"}
              />
              <Text style={styles.itemText}>{item}</Text>
            </TouchableOpacity>
          );
        })}
      </ScrollView>

      {/* Buttons */}
      <View
        style={{
          flexDirection: "row",
          justifyContent: "space-between",
          alignItems: "center",
          marginVertical: 15,
          paddingHorizontal: 10,
        }}
      >
        <TouchableOpacity
          style={{
            flex: 1,
            marginRight: 5,
            backgroundColor: "#4CAF50",
            paddingVertical: 12,
            borderRadius: 8,
            alignItems: "center",
            justifyContent: "center",
          }}
          onPress={handleDownload}
        >
          <Text style={{ color: "#fff", fontWeight: "bold" }}>DOWNLOAD PDF</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={{
            flex: 1,
            marginLeft: 5,
            backgroundColor: "#2196F3",
            paddingVertical: 12,
            borderRadius: 8,
            alignItems: "center",
            justifyContent: "center",
          }}
          onPress={handleShare}
        >
          <Text style={{ color: "#fff", fontWeight: "bold" }}>SHARE</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}
